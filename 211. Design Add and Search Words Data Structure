class WordDictionary {

    /** Initialize your data structure here. */
    class Node{
        Node child[] = new Node[26];
        boolean leaf = false;
    }
    Node root;
    public WordDictionary() {
        root = new Node();
        
    }
    
    public void addWord(String word) {
        Node curr = root;
        int n = word.length();
        for(int i=0;i<n;i++){
            char ch = word.charAt(i);
            if(curr.child[ch-'a']==null){
                curr.child[ch-'a'] = new Node();
            }
            curr = curr.child[ch-'a'];   
        }
        curr.leaf = true;
    }
    
    
    
    public boolean search(String word) {
        Node curr = root;
        return util(word,0,curr);
    }
    
    public boolean util(String word,int ind,Node root){
        
        if(ind==word.length()) {
            if(root.leaf==true) return true;
            return false;
        }
        
        char ch = word.charAt(ind);
        if(ch!='.'){
            if(root.child[ch-'a']!=null) return util(word,ind+1,root.child[ch-'a']);
            return false;
            
        }else{
            for(Node ele:root.child){
                if(ele!=null && util(word,ind+1,ele)) return true;
            }
            
            return false;
        }
     
    }
    
    
}

/**
 * Your WordDictionary object will be instantiated and called as such:
 * WordDictionary obj = new WordDictionary();
 * obj.addWord(word);
 * boolean param_2 = obj.search(word);
 */
